/**
 * Compares two distance attributes.
 * 
 * @param {Object} obj1 - The first distance attribute object.
 * @param {Object} obj2 - The second distance attribute object.
 * @returns {boolean} Returns true if the distance attributes are equal, otherwise false.
 */
export const compareDistanceAttributes = (obj1, obj2) => {
    if (!obj1.distance || !obj2.distance) {
        return false;
    }
    return obj1.distance.value === obj2.distance.value && obj1.distance.unit === obj2.distance.unit;
};


/**
 * Compares two time attributes.
 * 
 * @param {Object} obj1 - The first time attribute object.
 * @param {Object} obj2 - The second time attribute object.
 * @returns {boolean} Returns true if the time attributes are equal, otherwise false.
 */
export const compareTimeAttributes = (obj1, obj2) => {
    if (!obj1.time || !obj2.time) {
        return false;
    }
    return obj1.time.value === obj2.time.value;
};

/**
 * Compares two sets attributes.
 * 
 * @param {Object} obj1 - The first sets attribute object.
 * @param {Object} obj2 - The second sets attribute object.
 * @returns {boolean} Returns true if the sets attributes are equal, otherwise false.
 */
export const compareSetsAttributes = (obj1, obj2) => {
    if (!obj1.sets || !obj2.sets) {
        return false;
    }
    return obj1.sets.value === obj2.sets.value;
};

/**
 * Compares two reps attributes.
 * 
 * @param {Object} obj1 - The first reps attribute object.
 * @param {Object} obj2 - The second reps attribute object.
 * @returns {boolean} Returns true if the reps attributes are equal, otherwise false.
 */
export const compareRepsAttributes = (obj1, obj2) => {
    if (!obj1.reps || !obj2.reps) {
        return false;
    }
    return obj1.reps.value === obj2.reps.value;
};

/**
 * Compares two weight attributes.
 * 
 * @param {Object} obj1 - The first weight attribute object.
 * @param {Object} obj2 - The second weight attribute object.
 * @returns {boolean} Returns true if the weight attributes are equal, otherwise false.
 */
export const compareWeightAttributes = (obj1, obj2) => {
    if (!obj1.weight || !obj2.weight) {
        return false;
    }
    return obj1.weight.value === obj2.weight.value && obj1.weight.unit === obj2.weight.unit;
};

/**
 * Compares two intensity attributes.
 * 
 * @param {Object} obj1 - The first intensity attribute object.
 * @param {Object} obj2 - The second intensity attribute object.
 * @returns {boolean} Returns true if the intensity attributes are equal, otherwise false.
 */
export const compareIntensityAttributes = (obj1, obj2) => {
    if (!obj1.intensity || !obj2.intensity) {
        return false;
    }
    return obj1.intensity.value === obj2.intensity.value;
};

/**
 * Compares two level attributes.
 * 
 * @param {Object} obj1 - The first level attribute object.
 * @param {Object} obj2 - The second level attribute object.
 * @returns {boolean} Returns true if the level attributes are equal, otherwise false.
 */
export const compareLevelAttributes = (obj1, obj2) => {
    if (!obj1.level || !obj2.level) {
        return false;
    }
    return obj1.level.value === obj2.level.value;
};
