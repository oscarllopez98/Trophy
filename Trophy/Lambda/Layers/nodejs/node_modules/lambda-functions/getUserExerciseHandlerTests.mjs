import { handler } from "lambda-functions/getUserExerciseHandler.mjs";
import { ERROR } from "trophy-common-utils/TestErrors.mjs";

/**
 * Test function for retrieving a user's exercise entry.
 * 
 * @param {Object} event - The event object containing information about the HTTP request.
 * @returns {Promise<void>} A Promise that resolves when the test is completed.
 * @throws {Error} If the handler function returns a non-200 status code or if there's an error during the test.
 */
const testGetUserExercise = async (event) => {
    console.time("test");
    // Validate that event is not undefined or null
    let response = await handler(event);
    if (response.statusCode !== 200) throw new Error(`${ERROR.ERROR_LAMBDA_FUNCTION_FAILED_STATUS_CODE} ${response.statusCode}`);
    else {
        // Parse the body to retrieve the exercise value
        const exerciseValue = JSON.parse(response.body).exercise;

        // Pretty print the exercise value
        const prettyExerciseValue = JSON.stringify(exerciseValue, null, 2);

        console.log(prettyExerciseValue);
        console.timeEnd("test");

        console.log("Test Passed! with time");
    }
}


const eventUserWithPermissions = {
    pathParameters: {
        exerciseId: "db59efec-28d4-4739-84db-ec18e0e7b4cd",
        userId: "4bf0e7ef-cd19-4b0c-b9a2-e946c58e01d1"
    }
}

// testGetUserExercise(eventUserWithPermissions);