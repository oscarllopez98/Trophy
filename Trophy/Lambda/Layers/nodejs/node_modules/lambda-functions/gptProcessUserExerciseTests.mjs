import { ERROR} from '../trophy-common-utils/TestErrors.mjs'
import { handler } from 'lambda-functions/gptProcessUserExercise.mjs' 

const invalidEvent = function() {
    // Set event and call handler
    let event;
    let result = handler(event);

    // Parse JSON
    const parsedJSON = result.statusCode;

    // Pass/Fail
    let failedStatusCode = parsedJSON.statusCode === 500;
    console.log("invalidEvent Test #1 Pass Status:", failedStatusCode);

    // Set event and call handler
    event = null;
    result = handler(event);

    // Parse JSON
    parsedJSON = result.statusCode;

    // Pass/Fail
    failedStatusCode = parsedJSON.statusCode === 500;
    console.log("invalidEvent Test #2 Pass Status:", failedStatusCode);
}

const invalidPathParameters = function() {
    // Set event and call handler
    let event = { pathParameter };
    let result = handler(event);

    // Parse JSON
    const parsedJSON = result.statusCode;

    // Pass/Fail
    let failedStatusCode = parsedJSON.statusCode === 500;
    console.log("invalidPathParameters Test #1 Pass Status:", failedStatusCode);

    // Set event and call handler
    event = { pathParameter: null };
    result = handler(event);

    // Parse JSON
    parsedJSON = result.statusCode;

    // Pass/Fail
    failedStatusCode = parsedJSON.statusCode === 500;
    console.log("invalidPathParameters Test #2 Pass Status:", failedStatusCode);
}

const invalidUserIdProperty = function() {
    // Set event and call handler
    let event = { pathParameter: { userId } };
    let result = handler(event);

    // Parse JSON
    const parsedJSON = result.statusCode;

    // Pass/Fail
    let failedStatusCode = parsedJSON.statusCode === 500;
    console.log("invalidUserIdProperty Test #1 Pass Status:", failedStatusCode);

    // Set event and call handler
    event = { pathParameter: { userId: null } };
    result = handler(event);

    // Parse JSON
    parsedJSON = result.statusCode;

    // Pass/Fail
    failedStatusCode = parsedJSON.statusCode === 500;
    console.log("invalidUserIdProperty Test #2 Pass Status:", failedStatusCode);
}

const validUserIdProperty = function() {
    // Set event and call handler
    let event = { pathParameter: { userId: "4bf0e7ef-cd19-4b0c-b9a2-e946c58e01d1" } };
    let result = handler(event);

    // Parse JSON
    const parsedJSON = result.statusCode;

    // Pass/Fail
    let failedStatusCode = parsedJSON.statusCode === 500;
    console.log("invalidUserIdProperty Test #1 Pass Status:", failedStatusCode);

    // Set event and call handler
    event = { pathParameter: { userId: null } };
    result = handler(event);

    // Parse JSON
    parsedJSON = result.statusCode;

    // Pass/Fail
    failedStatusCode = parsedJSON.statusCode === 500;
    console.log("invalidUserIdProperty Test #2 Pass Status:", failedStatusCode);
}


// Test invalid event scenarios
invalidEvent();
invalidPathParameters();
invalidUserIdProperty();