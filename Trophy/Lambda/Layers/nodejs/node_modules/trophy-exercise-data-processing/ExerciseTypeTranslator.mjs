import { EXERCISE_TYPES_TABLE } from "trophy-common-utils/DatabaseTables.mjs";
import { EXERCISE_TYPE_ID_COLUMN, EXERCISE_TYPE_VALUE_COLUMN } from "trophy-common-utils/DatabaseTableFields.mjs";

/**
 * Translates the Exercise Type ID to its corresponding unit value.
 * 
 * @param {number} typeId - The Exercise Type ID to translate.
 * @param {Object} connection - The database connection object.
 * @returns {Promise<string>} The unit value corresponding to the provided Exercise Type ID.
 * @throws {Error} If there is an error during the database query or if no matching Exercise Type ID is found.
 */
export const translateExerciseTypeIDToUnit = async (typeId, connection) => {
    try {

        const [rows, fields] = await connection.execute(
            `
            SELECT ${ EXERCISE_TYPE_VALUE_COLUMN}
            FROM ${ EXERCISE_TYPES_TABLE } 
            WHERE  ${ EXERCISE_TYPE_ID_COLUMN } = ?
            `,
            [typeId]);

        //Return if any rows were found
        if (rows.length > 0) {
            return rows[0].exercise_type_value;
        } else {
            throw new Error(`Failed to translate Exercise Type id to Exercise Type. No unit_id of '${typeId}' found in the table: `, error.message);
        }

    } catch(error) {
        throw new Error("Failed to translate Exercise Type id to Exercise Type: " + error.message);
    } finally {

    }
}