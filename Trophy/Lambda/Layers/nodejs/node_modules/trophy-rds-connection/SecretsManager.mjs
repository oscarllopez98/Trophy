import {
    SecretsManagerClient,
    GetSecretValueCommand,
  } from "@aws-sdk/client-secrets-manager";

/**
 * Retrieves the secret value associated with the specified secret ID from AWS Secrets Manager.
 * @param {string} secretId - The ID of the secret to retrieve.
 * @returns {Promise<string>} Returns a Promise resolving to the secret value.
 * @throws {Error} Throws an error if Secrets Manager fails to retrieve the secret value.
 */
export const getSecretValue = async (secretId) => {
    try {

        console.log(`Using Secret ID: ${secretId}`);

        // Create an AWS Secrets Manager client
        const client = new SecretsManagerClient({
            region: "us-east-1",
        });

        try {
            // Define input parameters for the GetSecretValueCommand
            const input = { // GetSecretValueRequest
                SecretId: secretId
            };
            console.log("Input: ", input);

            // Create a command to get the secret value
            const command = new GetSecretValueCommand(input);
            console.log("Command: ", command);

            // Send the command to AWS Secrets Manager
            let response = await client.send(command);

            // Log when the response is retrieved
            console.log("Response Retrieved (true/false): ", !!response.SecretString);

            // Return the secret string from the response
            return response.SecretString;

        } catch (error) {
            // Handle errors thrown by the AWS SDK
            console.log("Error occurred with SecretsManagerClient. Request Failed: ",error);
            throw new Error ("Error occurred with SecretsManagerClient. Request Failed: ", error.message);
        }

    } catch (error) {
        console.error(`Error retrieving secret '${secretId}':`, error);
        throw error;
    }
};